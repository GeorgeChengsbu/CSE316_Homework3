{"ast":null,"code":"var _jsxFileName = \"/Users/george/Downloads/Top5Lists_HW3/client/src/components/Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n    console.log(store.currentList);\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleItemEdit(event) {\n    event.stopPropagation();\n    toggleItemEdit();\n  }\n\n  function toggleItemEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleEnterPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName();\n      toggleItemEdit();\n    }\n  }\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  if (!editActive) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'item-' + (index + 1),\n      className: itemClass,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDragEnter: handleDragEnter,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      draggable: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"edit-item-\" + index + 1,\n        className: \"list-card-button\",\n        onClick: handleToggleItemEdit,\n        value: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), props.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"item-\" + (index + 1),\n      className: \"list-card\",\n      type: \"text\",\n      onKeyPress: handleEnterPress //onChange={handleItemUpdateText}\n      //defaultValue={store.currentList.}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Top5Item, \"a7U8PH+kyKrpzUxZbnTVCtMulpE=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["/Users/george/Downloads/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","console","log","currentList","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveItemTransaction","handleToggleItemEdit","stopPropagation","toggleItemEdit","newActive","setIsItemEditActive","handleEnterPress","code","length","changeListName","index","itemClass","text"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [ editActive, setEditActive ] = useState(false);\n    const [draggedTo, setDraggedTo] = useState(0);\n\n    function handleDragStart(event) {\n        event.dataTransfer.setData(\"item\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n        console.log(store.currentList)\n    }\n\n    function handleDragEnter(event) {\n        event.preventDefault();\n        setDraggedTo(true);\n    }\n\n    function handleDragLeave(event) {\n        event.preventDefault();\n        setDraggedTo(false);\n    }\n\n    function handleDrop(event) {\n        event.preventDefault();\n        let target = event.target;\n        let targetId = target.id;\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n        let sourceId = event.dataTransfer.getData(\"item\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        setDraggedTo(false);\n\n        // UPDATE THE LIST\n        store.addMoveItemTransaction(sourceId, targetId);\n    }\n    function handleToggleItemEdit(event) {\n        event.stopPropagation();\n        toggleItemEdit();\n    }\n    function toggleItemEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsItemEditActive();\n        }\n        setEditActive(newActive);\n    }\n    function handleEnterPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"list-\".length);\n            store.changeListName();\n            toggleItemEdit();\n        }\n    }\n\n    let { index } = props;\n    let itemClass = \"top5-item\";\n    if (draggedTo) {\n        itemClass = \"top5-item-dragged-to\";\n    }\n    if (!editActive) {\n        return (\n            <div\n                id={'item-' + (index + 1)}\n                className={itemClass}\n                onDragStart={handleDragStart}\n                onDragOver={handleDragOver}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n                onDrop={handleDrop}\n                draggable=\"true\"\n            >\n                <input\n                    type=\"button\"\n                    id={\"edit-item-\" + index + 1}\n                    className=\"list-card-button\"\n                    onClick = {handleToggleItemEdit}\n                    value={\"\\u270E\"}\n                />\n                {props.text}\n            </div>)\n    }\n    else {\n        return(\n        <input\n                id={\"item-\"+(index+1) }\n                className='list-card'\n                type='text'\n                onKeyPress={handleEnterPress}\n                //onChange={handleItemUpdateText}\n                //defaultValue={store.currentList.}\n            />\n        );\n    }\n}\n\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}